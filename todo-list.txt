Next (in order of descending priority):
-change the name of the dictionary so that it's a glossary
-look into using PHP to read text file for application glossary
 --in readme, put directions on how to add a term to the glossary
-use strict equal in QUnit
-applying stepwise refinement in more areas
-in settings, player can choose whether to use GUI or not
 --store result in either local or session storage
-graphics (CSS and images)
-play a sound when a player is asked to check in

After the above:
-release 1.0
-Node.js

Considerable:
-precondition checks for functions with boolean argument (since an
 undefined argument is neither true nor false)
-figure out how to not allow a commit if unit tests failed
-checking for providing of arguments to functions that require it
 (contract may be sufficient); notify in console
-consider support for both use of keys and use of clicking
-consider whether or not its practical to enforce preconditions in unit
 tests (as opposed to solely with exceptions)
-look into generating tests automatically
-CSS variables
-AI