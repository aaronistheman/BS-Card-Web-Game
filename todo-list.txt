Next (in order of descending priority):
-cleanup comments
-look into nth-child error that pops up in console in unit testing
-write an application dictionary (as a webpage)
--(e.g. define: contract, center pile, pick, hover)
-fix acceptable number of players (can't have 1 player)
-fix error messages (e.g. argument error vs. precondition error)
 --for waitForPlayer(), etc.
-default values for Class parameters? (or exception?); unit tests
-determine who goes first based on the order in which the cards
 were dealt (for fairness)

After game functions without graphics:
-make readme
-release v0.1
-graphics (CSS and images)
-Node.js

Considerable:
-precondition checks for functions with boolean argument (since an
 undefined argument is neither true nor false)
-use a saboteur (i.e. me) to test my testing (see p.244 of "The
 Pragmatic Programmer")
-don't have functions use the value they're changing as parameters
-figure out how to not allow a commit if unit tests failed
-checking for providing of arguments to functions that require it
 (contract may be sufficient)
-consider support for both use of keys and use of clicking
-implement PHP security
-consider whether or not its practical to enforce preconditions in unit tests
 (as opposed to solely with exceptions)
-look into generating tests automatically
-CSS variables
-consider performance issues (e.g. with function append())
-modules for unit tests (e.g. based on which file each function is in)
-AI
-applying stepwise refinement in more areas

For README:
-note the use of the hook regarding trailing whitespace; include directions
 on how to enable that hook
-include directions for the shell scripts and batch file(s)
-include directions regarding unit tests
-include directions for running the project (on WebMatrix)
-note how contracts are enforced (unit tests, exceptions and alerts, etc.)